# -*- coding: utf-8 -*-
"""Copy of Grand-Finale.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wrt1eayeoenIK8DzhxQAyQQroMDkUJRg
"""

import requests
from datetime import datetime
from pprint import pprint
import csv
import json
#from google.colab import drive

base_url_submission = 'https://api.pushshift.io/reddit/submission/search/'
params = {'limit':'1000', 'sort':'desc', 'before':'', 'subreddit':''}
starttime = datetime.utcnow()
print(starttime.timestamp())

base_url_comment = 'https://api.pushshift.io/reddit/comment/search/'
def get_comments(post_id):
  params = {}
  params['link_id'] = post_id
  params['limit'] = 10000
  json_ = requests.get(url = base_url_comment, params = params)
  json_data = json_.json()
  return json_data['data']

def get_posts(subreddit, starttime, file_ptr, flair_filters = None, no_media = False):
  params['subreddit'] = subreddit
  params['before'] = int(starttime.timestamp())
  posts_cnt = 0
  act_cnt = 0
  total_comment_cnt = 0
  error = False
  cnt = 0
  while True:
    try:
      json_ = requests.get(url = base_url_submission, params = params)
      json_data = json_.json()
      if 'data' not in json_data or len(json_data['data'])==0:
        break

      json_data = json_data['data']
      params['before'] = json_data[-1]['created_utc'] - 1
      posts_cnt += len(json_data)
      print(posts_cnt, act_cnt, params)
      for post in json_data:
        if flair_filters:
          if 'link_flair_css_class' in post and post['link_flair_css_class']:
            flair = post['link_flair_css_class'].lower()
            flair = flair.replace(" ","")
            if flair not in flair_filters:
              continue
        # pprint(post)
        comments = get_comments(post['id'])
        total_comment_cnt += len(comments)
        post['comment_obj'] = comments
        text = json.dumps(post)
        file_ptr.write(text + "\n")
        act_cnt += 1
        # break
      # break
    except:
      #file_ptr.close()
      print("Rate limit exceeded")
      print(posts_cnt, total_comment_cnt, params)
      # print()
      continue
  print("Number of posts", posts_cnt)
  print("Number of comments", total_comment_cnt)

# from google.colab import drive
# drive.mount('/content/gdrive')

f = open("./mdma.ndjson","w+")
get_posts("mdma", starttime, f, ['social', 'tripreport', 'firsttime'])
f.cloase()
#"https://api.pushshift.io/reddit/search/comment/?subreddit=tripreports&metadata=true&size=0&after=1199145600"

#r = get_comments('cl8w7e')

#pprint(len(r['data']))

